version: '3.8'

services:
  robotframework:
    container_name: robotframework
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./environments:/home/robot/environments
      - ./lib:/home/robot/lib
      - ./resources:/home/robot/resources
      - ./testcases:/home/robot/testcases
      - ./robotframework-data:/home/robot/reports
    env_file:
      - .env
    command: >
      sh -c "robot -d ./reports -v ENV:${ENV} -i ${TAG} testcases/"
    restart: on-failure:3
    depends_on:
      app-fleet-api:
        condition: service_healthy
    networks:
      - testing

  app-fleet-api:
    image: app-fleet-api
    restart: always
    build: ./backend
    env_file:
      - ./backend/dev.env
    ports:
      - 80:80
    healthcheck:
      test: wget --no-verbose --spider http://localhost
      interval: 3s
      timeout: 1s
      retries: 3
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - testing

  mongodb:
    container_name: mongo
    image: mongo:5.0.2
    restart: always
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongo-data:/data/db
    env_file:
      - .mongodb.env
    ports:
      - 27017:27017
    healthcheck:
      test:
        - CMD
        - mongo
        - --eval
        - "db.adminCommand('ping')"
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - testing

networks:
  testing: